@tailwind base;
@tailwind components;
@tailwind utilities;

:root { --bgA: #edf1f7; --bgB: #e7fff5; }

html, body {
  min-height: 100%;
  background:
    radial-gradient(110% 80% at 50% 0%, var(--bgB) 0%, var(--bgA) 55%, #e9eef6 100%);
  color: #111216;
}

body::after {
  content: '';
  position: fixed;
  inset: 0;
  pointer-events: none;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" opacity="0.05" width="140" height="140"><filter id="n"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="2" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23n)"/></svg>');
  mix-blend-mode: multiply;
}


/* stage directions */
.prose p:has(> :is(em,strong):only-child) {}
.prose :where(p):where(:not(:has(code))) {
}
/* make bracketed aside lines slightly dimmer */
.prose :where(p):where(:not(:has(code))) {
  /* no-op placeholder for future; keeping content-only normalization per user request */
}


/* Stage directions styling */
.prose p:has(> [class*="bracketed"]), 
.prose p:has(> em:only-child) {
  color: #9ca3af; /* Tailwind zinc-400 */
  font-style: italic;
}
/* Inline bracketed text inside lyrics */
.prose :where(p, li) {
  white-space: pre-wrap;
}
.prose :where(p, li) :is([data-bracketed]) {
  color: #9ca3af; 
  font-style: italic;
}
